import { CameraUtils, ShareAPI, Notification, LocationUtils } from "./utils.mjs";

// Ch·ªù DOM t·∫£i xong
document.addEventListener("DOMContentLoaded", function () {
  // ‚úÖ Ph·∫ßn camera
  const cameraUtils = new CameraUtils();
  const takePictureBtn = document.getElementById("takePictureBtn");
  const photoEl = document.getElementById("photo");

  cameraUtils.apply(
    takePictureBtn,
    (image) => {
      console.log(image);
      photoEl.src = image.webPath;
      photoEl.style.display = "block";
    },
    (errors) => {
      console.error(errors);
    }
  );

  // ‚úÖ Ph·∫ßn ScreenShot

  // ‚úÖ Ph·∫ßn th√¥ng b√°o
  const notification = new Notification();
  const notificationBtn = document.getElementById("notificationBtn");
  notificationBtn.onclick = async () => {
    await notification.sendNotification("My Middle App", "QThuanDtryNo1 xin ch√†o c√°c b·∫°n", "");
  };

  // ‚úÖ Ph·∫ßn chia s·∫ª
  const share = new ShareAPI();
  const shareBtn = document.getElementById("shareBtn");
  shareBtn.onclick = async () => {

    const currentTime = timeDisplay.innerText;
    await share.shareContent(
           "Chia s·∫ª th·ªùi gian hi·ªán t·∫°i",
           `QThuan ƒëang chia s·∫ª v·ªõi b·∫°n: ${currentTime}`,
           "https://www.facebook.com/quang.thuan.38061/?locale=vi_VN"
       );
  };
// ‚úÖ Ph·∫ßn show time
    const showTimeBtn = document.getElementById("showTimeBtn");
    const timePopup = document.getElementById("timePopup");
    const timeDisplay = document.getElementById("timeDisplay");
    const closePopup = document.getElementById("closePopup");

    let updateTimeInterval = null;

    if (showTimeBtn && timePopup && timeDisplay && closePopup) {
        showTimeBtn.onclick =  () => {
            timePopup.classList.remove("hidden");
            timePopup.style.opacity = "0";
            setTimeout(() => (timePopup.style.opacity = "1"), 50);

            const updateTime = async () => {
                const now = new Date();
                const currentTime = `‚è∞ Gi·ªù hi·ªán t·∫°i: ${now.toLocaleTimeString()}`;
                timeDisplay.innerText = `‚è∞ Gi·ªù hi·ªán t·∫°i: ${now.toLocaleTimeString()}`;
                await notification.sendNotification("My Middle App", currentTime, "");
            };

            updateTime();
            if (!updateTimeInterval) {
                updateTimeInterval = setInterval(updateTime, 1000);
            }
        };

        closePopup.onclick = () => closePopupFunc();
        timePopup.onclick = (event) => {
            if (event.target === timePopup) closePopupFunc();
        };
    }

    function closePopupFunc() {
        timePopup.style.opacity = "0";
        setTimeout(() => timePopup.classList.add("hidden"), 200);
        clearInterval(updateTimeInterval);
        updateTimeInterval = null;
    };

//

        const locationUtils = new LocationUtils();
        const getLocationBtn = document.getElementById("getLocationBtn");
        const locationResult = document.getElementById("locationResult");
        const locationResult2 = document.getElementById("locationResult2");
        const mapContainer = document.getElementById("mapContainer");
        const mapFrame = document.getElementById("mapFrame");

        getLocationBtn.onclick = () => {
          locationResult.textContent = "üì° ƒêang l·∫•y v·ªã tr√≠...";
          mapContainer.classList.add("hidden");

          locationUtils.getCurrentLocation(
            (coords) => {
              // L·∫•y t·ªça ƒë·ªô t·ª´ ƒë·ªëi t∆∞·ª£ng coords
              const { latitude, longitude } = coords;
              console.log("‚úÖ L·∫•y v·ªã tr√≠ th√†nh c√¥ng:", latitude, longitude);

              // Hi·ªÉn th·ªã t·ªça ƒë·ªô
              locationResult.innerHTML = `üìç V·ªã tr√≠ c·ªßa b·∫°n: ${latitude}, ${longitude}`;
              locationResult2.innerHTML = `üìç V·ªã tr√≠: ${latitude}, ${longitude}`;

              // C·∫≠p nh·∫≠t b·∫£n ƒë·ªì
              mapFrame.src = `https://www.google.com/maps/embed/v1/view?key=AIzaSyCzRtQBnGX5_eeZNxsUtTj94WuOZZKzSr4&center=${latitude},${longitude}&zoom=15`;

              // Hi·ªÉn th·ªã b·∫£n ƒë·ªì
              mapContainer.classList.remove("hidden");
            },
            (error) => {
              console.error("‚ùå L·ªói khi l·∫•y v·ªã tr√≠:", error);
              locationResult.textContent = "‚ùå Kh√¥ng th·ªÉ l·∫•y v·ªã tr√≠!";
              mapContainer.classList.add("hidden"); // ·∫®n b·∫£n ƒë·ªì n·∫øu l·ªói
            }
          );
        };


});

